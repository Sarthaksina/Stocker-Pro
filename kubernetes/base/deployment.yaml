apiVersion: apps/v1
kind: Deployment
metadata:
  name: stocker-api
  labels:
    app: stocker-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: stocker-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: stocker-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics/prometheus"
        prometheus.io/port: "8000"
    spec:
      containers:
      - name: stocker-api
        image: ${DOCKER_REGISTRY}/stocker-api:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: stocker-secrets
              key: database_url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: stocker-secrets
              key: redis_url
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: stocker-secrets
              key: secret_key
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: stocker-config
              key: environment
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: stocker-config
              key: log_level
        - name: API_RATE_LIMIT
          valueFrom:
            configMapKeyRef:
              name: stocker-config
              key: api_rate_limit
        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /ping
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: logs
        emptyDir: {}
      - name: config
        configMap:
          name: stocker-config
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 30
